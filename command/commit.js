const inquirer = require('inquirer');
const git = require('../lib/git');
const ora = require('ora');

const emojiList = {
  Bugfix: 'üêõ [bug] ',
  NewFeature: '‚ú®  [feature] ',
  Documentation: 'üìö  [document] ',
  Refactoring: 'üì¶  [refact] ',
  Style: 'üíÑ [Style]',
  Tooling: 'üîß  [config] ',
  Develop: 'üöß [develop]',
  Lint: 'üé® [lint]',
  Test: '‚úÖ [Test]'
}
/**
 * ÂèÇËÄÉ https://github.com/liuchengxu/git-commit-emoji-cn
 * emoji‰πüÂ§™‰ªñÂ¶àÂ§ö‰∫Ü...
 */
const commitPrompt = [{
  type: 'list',
  name: 'type',
  message: 'ÈÄâÊã©CommitÁ±ªÂûã',
  choices: [{
    name: 'üêõ  bug',
    value: 'Bugfix'
  }, {
    name: '‚ú®  Êñ∞ÁâπÊÄß',
    value: 'NewFeature'
  }, {
    name: 'üíÑ Ê†∑Âºè‰øÆÊîπ',
    value: 'Style'
  }, {
    name: 'üöß Â∑•‰ΩúËøõË°å‰∏≠',
    value: 'Develop',
  }, {
    name: 'üìö  ÊñáÊ°£',
    value: 'Documentation'
  }, {
    name: 'üì¶  ÈáçÊûÑ',
    value: 'Refactoring'
  }, {
    name: 'üîß  ÈÖçÁΩÆ',
    value: 'Tooling'
  }, {
    name: 'üé® ‰ª£Á†ÅÁªìÊûÑ/Ê†ºÂºè',
    value: 'Lint'
  }, {
    name: '‚úÖ ÊµãËØïÁõ∏ÂÖ≥',
    value: 'Test',
  }]
}]

const pushPrompt = {
  type: 'confirm',
  name: 'confirmPush',
  message: 'ÊòØÂê¶Êé®ÈÄÅÂà∞ËøúÁ´Ø'
}

const describePrompt = {
  type: 'input',
  name: 'describe',
  message: 'ËØ∑ËæìÂÖ•commitÂÖ∑‰ΩìÊèèËø∞',
  validate: input => {
    if (!input) {
      console.log('ËØ∑ÁÆÄÁï•ÊèèËø∞commitÂÜÖÂÆπ')
      return false;
    }
    return true;
  }
}

const commit = async () => {
  const { stdout } = await git.diffCheck();
  if (!stdout) {
    return console.log('nothing change');
  }
  await git.add();

  const { type } = await inquirer.prompt(commitPrompt);
  const { describe } = await inquirer.prompt(describePrompt);
  await git.commit(`${emojiList[type]}${describe}`);

  const { confirmPush } = await inquirer.prompt(pushPrompt);
  if (confirmPush) {
    const doing = ora('i\'m working').start()
    await git.push();
    doing.stop();
    console.log('git push ÊàêÂäü')
  }
}

module.exports = {
  commit: commit,
}